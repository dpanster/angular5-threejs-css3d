{"version":3,"sources":["C:/Private/programming/Angular/prj/Test3D/src/$_lazy_route_resource lazy","C:/Private/programming/Angular/prj/Test3D/src/app/app-routing.module.ts","C:/Private/programming/Angular/prj/Test3D/src/app/app.component.css","C:/Private/programming/Angular/prj/Test3D/src/app/app.component.html","C:/Private/programming/Angular/prj/Test3D/src/app/app.component.ts","C:/Private/programming/Angular/prj/Test3D/src/app/app.module.ts","C:/Private/programming/Angular/prj/Test3D/src/app/css3d-threejs/css3d-threejs.component.css","C:/Private/programming/Angular/prj/Test3D/src/app/css3d-threejs/css3d-threejs.component.html","C:/Private/programming/Angular/prj/Test3D/src/app/css3d-threejs/css3d-threejs.component.ts","C:/Private/programming/Angular/prj/Test3D/src/app/css3d-threejs/src/main.ts","C:/Private/programming/Angular/prj/Test3D/src/app/cube-threejs/cube-threejs.component.css","C:/Private/programming/Angular/prj/Test3D/src/app/cube-threejs/cube-threejs.component.html","C:/Private/programming/Angular/prj/Test3D/src/app/cube-threejs/cube-threejs.component.ts","C:/Private/programming/Angular/prj/Test3D/src/app/home/home.component.css","C:/Private/programming/Angular/prj/Test3D/src/app/home/home.component.html","C:/Private/programming/Angular/prj/Test3D/src/app/home/home.component.ts","C:/Private/programming/Angular/prj/Test3D/src/environments/environment.ts","C:/Private/programming/Angular/prj/Test3D/src/main.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"../../../../../src/$$_lazy_route_resource lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Private/programming/Angular/prj/Test3D/src/$$_lazy_route_resource lazy\n// module id = ../../../../../src/$$_lazy_route_resource lazy recursive\n// module chunks = main","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { HomeComponent } from './home/home.component';\nimport { CubeThreejsComponent } from './cube-threejs/cube-threejs.component';\nimport { Css3dThreejsComponent } from './css3d-threejs/css3d-threejs.component';\n\nconst routes: Routes = [\n  {\n      path: '',\n      component: HomeComponent\n  },\n  {\n      path: 'cube-threejs',\n      component: CubeThreejsComponent\n  },\n  {\n      path: 'css3d-threejs',\n      component: Css3dThreejsComponent\n  }\n];\n\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n\n\n\n// WEBPACK FOOTER //\n// C:/Private/programming/Angular/prj/Test3D/src/app/app-routing.module.ts","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Private/programming/Angular/prj/Test3D/src/app/app.component.css\n// module id = ../../../../../src/app/app.component.css\n// module chunks = main","module.exports = \"<div class=\\\"w3-sidebar w3-bar-block w3-black w3-top\\\" style=\\\"z-index:3;width:10%;\\\">\\n  <div class=\\\"w3-container w3-display-container w3-padding-16\\\">\\n    <h3>\\n      <b><!--3D Test--></b>\\n    </h3>\\n  </div>\\n  <code>\\n    <a routerLink=\\\"\\\" class=\\\"w3-bar-item w3-button\\\">About</a>\\n    <a routerLink=\\\"cube-threejs\\\" class=\\\"w3-bar-item w3-button\\\">Cube - Three.js</a>\\n    <a routerLink=\\\"css3d-threejs\\\" class=\\\"w3-bar-item w3-button\\\">CSS3D - Three.js</a>\\n  </code>\\n</div>\\n\\n\\n<div style=\\\"margin-left:10%;\\\">\\n  <router-outlet></router-outlet>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Private/programming/Angular/prj/Test3D/src/app/app.component.html\n// module id = ../../../../../src/app/app.component.html\n// module chunks = main","import { Component } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\n// component decorator(s)\n@Component({\n  selector: 'app-root',\n  styleUrls: ['app.component.css'],\n  templateUrl: './app.component.html'\n\n})\nexport class AppComponent {\n  test = 'app';\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Private/programming/Angular/prj/Test3D/src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { AppRoutingModule } from './app-routing.module';\nimport { FormsModule } from '@angular/forms';\n\nimport { AppComponent } from './app.component';\nimport { CubeThreejsComponent } from './cube-threejs/cube-threejs.component';\nimport { HomeComponent } from './home/home.component';\nimport { Css3dThreejsComponent } from './css3d-threejs/css3d-threejs.component';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    CubeThreejsComponent,\n    HomeComponent,\n    Css3dThreejsComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// C:/Private/programming/Angular/prj/Test3D/src/app/app.module.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Private/programming/Angular/prj/Test3D/src/app/css3d-threejs/css3d-threejs.component.css\n// module id = ../../../../../src/app/css3d-threejs/css3d-threejs.component.css\n// module chunks = main","module.exports = \"<!-- wrap w3 -->\\n<div class=\\\"w3-container\\\">\\n  <header>\\n    <div class=\\\"w3-container \\\">\\n      <h1>\\n        <b>A Three.js CSS3d showcase...</b>\\n      </h1>\\n      This canvas contains two scenes from\\n      <em>THREE.js</em> and two renderer elements, a\\n      <em>WebGLRenderer</em> and a\\n      <em>CSS3DRenderer</em>.\\n      <br> The focus is the integration and handling on the CSS 3d in the scene. Features for this showcase are clickable, highlight,\\n      moveable css elements. One drop-down menu is integrated.\\n      <br> Additionally the WebGL scene contains a random generated terrain, light, shadow, camera handling with mouse, physics\\n      with collision detection, tween, object scaling, rotation around a (pivot-)point and a simple particle system. Play with the clickable elements and see whats happen.\\n      <br>\\n      <br> A list of used libraries / packages for this angular controller example:\\n    </div>\\n  </header>\\n  <div class=\\\"w3-container \\\">\\n    <code>\\n      <ul>\\n        <li>Three.js R91 (V0.91.0) / NPM: npm i three / main 3D part</li>\\n        <li>CSS3dRenderer (V1.0.1) / NPM: npm i three-css3drenderer / CSS part</li>\\n        <li>Trackball controls (V0.0.7) / NPM: npm i three-trackballcontrols / Camera control with mouse</li>\\n        <li>Tween (V16.6.0) / NPM: npm i @tweenjs/tween.js / Soft moving objects</li>\\n        <li>Cannon (V0.6.1) / NPM: npm i cannon / Physics</li>\\n        <li>Perlin Noise (V0.0.1) / NPM: npm i perlin-noise / Noise for terrain</li>\\n        <li>Chroma (V1.3.7) / NPM: npm i chroma-js / Color scaling for heightfield</li>\\n      </ul>\\n    </code>\\n  </div>\\n  <!-- canvas here -->\\n  <!--<canvas class=\\\"w3-center\\\" #canvasCSS3d (window:resize)=\\\"onResize($event)\\\"></canvas>-->\\n  <div class=\\\"w3-container\\\">\\n      <div #canvasCSS3d (window:resize)=\\\"onResize()\\\"></div>\\n  </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Private/programming/Angular/prj/Test3D/src/app/css3d-threejs/css3d-threejs.component.html\n// module id = ../../../../../src/app/css3d-threejs/css3d-threejs.component.html\n// module chunks = main","import { AfterViewInit, Component, ElementRef, ViewChild } from '@angular/core';\n\n// local class source ts\nimport * as CSS3dWorld from \"./src/main\";\n\n@Component({\n  selector: 'app-css3d-threejs',\n  templateUrl: './css3d-threejs.component.html',\n  styleUrls: ['./css3d-threejs.component.css']\n})\nexport class Css3dThreejsComponent implements AfterViewInit {\n  /**\n   * Canvas Specific vars\n  */\n  @ViewChild('canvasCSS3d')\n  private canvasRef: ElementRef;\n\n  private world: CSS3dWorld.MainCSS3d;\n\n\n  /**\n * get the css3d canvas\n * \n * @readonly\n * @private\n * @type {HTMLDivElement}\n * @memberof Css3dThreejsComponent\n */\n  private get canvas(): HTMLDivElement {\n    return this.canvasRef.nativeElement;\n  }\n\n\n  /**k\n   * Creates an instance of Css3dThreejsComponent.\n   * @memberof Css3dThreejsComponent\n   */\n  constructor() {\n  }\n\n  /**\n   * Wait until template is bound to DOM.\n   * \n   * @memberof Css3dThreejsComponent\n   */\n  public ngAfterViewInit() {\n    this.world = new CSS3dWorld.MainCSS3d(this.canvas, 0.6);\n    // this.canvasRef.nativeElement.style.position = 'relative';\n\n    // let domCanvas:HTMLCanvasElement = document.querySelector(\"canvas\");\n    // console.log(domCanvas);\n    // domCanvas.style.position = 'relative';\n  }\n\n\n  /* EVENTS */\n  /**\n   * Update scene after resizing. \n   */\n  public onResize() {\n    this.world.onResize();\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Private/programming/Angular/prj/Test3D/src/app/css3d-threejs/css3d-threejs.component.ts","// instaled with npm\r\nimport * as THREE from 'three';\r\nimport * as TrackballControls from 'three-trackballcontrols';\r\nimport * as CSS3DRenderer from 'three-css3drenderer';\r\nimport * as TWEEN from 'tween.js';\r\nimport * as Perlin from 'perlin-noise';\r\nimport * as Chroma from 'chroma-js';\r\nimport * as Cannon from 'cannon';\r\n\r\nenum Texture {\r\n    BRICK = \"assets/texture/Bricks.jpg\",\r\n    GAS_BRIGHT = \"assets/texture/Gaseous_Bright.jpg\",\r\n    GAS_DARK = \"assets/texture/Gaseous_Dark.png\",\r\n    GAS_GREEN = \"assets/texture/Gaseous_Green.jpg\",\r\n    MOON_BW = \"assets/texture/Moon_BW.jpg\",\r\n}\r\n\r\nexport class MainCSS3d {\r\n\r\n    // private main parts\r\n    private scene: THREE.Scene;\r\n    private sceneCSS: THREE.Scene;\r\n    private cannonWorld: Cannon.World;\r\n\r\n    private renderer: THREE.WebGLRenderer;\r\n    private rendererCSS: THREE.CSS3DRenderer;\r\n    private camera: THREE.PerspectiveCamera;\r\n    private controls: TrackballControls;\r\n\r\n    // screen\r\n    private aspRatio: number;\r\n    private scrSize: number;\r\n\r\n    // dom elements\r\n    private htmlDivCanvas: HTMLDivElement;\r\n\r\n    // objects\r\n    private torus: THREE.Mesh;\r\n    private sphereSatRotational: THREE.Mesh;\r\n    private pivotPoint: THREE.Object3D;\r\n    private pivotPointPmSystem: THREE.Object3D;\r\n    private pmSystem: THREE.ParticleSystem;\r\n    private terrain: THREE.Mesh;\r\n    private sceneBalls: Array<THREE.Mesh> = [];\r\n\r\n    // tween\r\n    private tweenSphereScaleZ: TWEEN.Tween;\r\n    private tweenPivotPartSysRotY: TWEEN.Tween;\r\n    private tweenPhysicObjects: TWEEN.Tween;\r\n    private tweenPhysicCSSElem: TWEEN.Tween;\r\n\r\n    //material\r\n    private terrainMat: THREE.MeshPhongMaterial;\r\n\r\n    // light\r\n    private directionalLight: THREE.SpotLight;\r\n\r\n    // cannon physics\r\n    private timestep: number = 1 / 60;\r\n    private bPhysicsOn: boolean = false;\r\n    private cannonBalls: Array<Cannon.Body> = [];\r\n\r\n    /**\r\n     * Creates an instance of MainCSS3d.\r\n     * @param {HTMLDivElement} can \r\n     * @param {number} screenSizePercent \r\n     * @memberof MainCSS3d\r\n     */\r\n    constructor(can: HTMLDivElement, screenSizePercent: number) {\r\n        // set\r\n        this.htmlDivCanvas = can;\r\n        this.aspRatio = (window.innerWidth * screenSizePercent) / (window.innerHeight * screenSizePercent);\r\n        this.scrSize = screenSizePercent;\r\n\r\n        // for all scene/renderes\r\n        this.initiateCamera();\r\n\r\n        /////// physics\r\n        this.initPhysicWorld();\r\n\r\n        /////// webGl \r\n        this.createRenderer();\r\n        this.initiateGeometies();\r\n        this.initiateLight();\r\n        this.initiateParticles();\r\n        this.initiateTerrain();\r\n        //this.addHelpers();\r\n        this.renderer.render(this.scene, this.camera);\r\n\r\n        ////////// css3d\r\n        this.createCSSRenderer();\r\n        this.initiateCSSObjects();\r\n        this.rendererCSS.render(this.sceneCSS, this.camera);\r\n\r\n        // controls\r\n        this.initTrackballControls();\r\n\r\n        // tween\r\n        this.initTween();\r\n\r\n        // life cycle\r\n        this.animate();\r\n    }\r\n\r\n    /**\r\n     * @description Rendering (initial, loop)\r\n     * @private\r\n     * @memberof MainCSS3d\r\n     */\r\n    private createRenderer() {\r\n        this.scene = new THREE.Scene();\r\n\r\n        this.renderer = new THREE.WebGLRenderer({\r\n            //canvas: can,\r\n            antialias: true,\r\n            alpha: true\r\n        });\r\n        this.renderer.setPixelRatio(window.devicePixelRatio);\r\n        this.renderer.setClearColor(0x000000, 1);\r\n        this.renderer.setSize(window.innerWidth * this.scrSize, window.innerHeight * this.scrSize);\r\n\r\n        // shadow\r\n        this.renderer.shadowMap.enabled = true;\r\n        this.renderer.shadowMap.type = THREE.PCFSoftShadowMap;   // to antialias the shadow\r\n\r\n        this.renderer.domElement.style.position = 'absolute'; // required\r\n        //this.renderer.domElement.style.top = \"40px\";\r\n        this.renderer.domElement.style.zIndex = \"1\"; // required\r\n\r\n        this.htmlDivCanvas.appendChild(this.renderer.domElement);\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @description Sets up camera position \r\n     * @private\r\n     * @memberof MainCSS3d\r\n     */\r\n    private initiateCamera() {\r\n\r\n        this.camera = new THREE.PerspectiveCamera(\r\n            70,\r\n            this.aspRatio,\r\n            1,\r\n            10000\r\n        );\r\n        this.camera.position.set(-200, 200, 800);\r\n\r\n    }\r\n    /**\r\n     * \r\n     * @description sets up light(s)\r\n     * @private\r\n     * @memberof MainCSS3d\r\n     */\r\n    private initiateLight() {\r\n        // light\r\n        var light = new THREE.AmbientLight(0xBBBBBB); // soft white light\r\n        this.scene.add(light);\r\n\r\n        this.directionalLight = new THREE.SpotLight(0xffffff, 0.4);\r\n        this.directionalLight.position.set(0, 400, 0);\r\n        this.directionalLight.target.position.set(10, 10, 0);\r\n        //this.directionalLight.target = this.sphereSatRotational; // target to an object\r\n        this.directionalLight.castShadow = true;\r\n        this.scene.add(this.directionalLight);\r\n\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @description Creates an texture from assetTexture, adapt optional to a torus geometry.\r\n     * @private\r\n     * @param {string} assetTexture The texture path from asset folder.\r\n     * @param {boolean} [isTorus=false] Is optional and default is false.\r\n     * @returns {THREE.MeshPhongMaterial} The generated MeshPongMaterail contain the texture.\r\n     * @memberof MainCSS3d\r\n     */\r\n    private getMeshPhongMaterialFromTexture(assetTexture: string, isTorus: boolean = false): THREE.MeshPhongMaterial {\r\n        let texture: THREE.Texture = new THREE.TextureLoader().load(assetTexture);\r\n        texture.minFilter = THREE.LinearFilter;\r\n\r\n        if (isTorus === true) {\r\n            texture.wrapS = texture.wrapT = THREE.RepeatWrapping;\r\n            texture.repeat.set(6, 2);\r\n        }\r\n        return (new THREE.MeshPhongMaterial({\r\n            map: texture,\r\n            specular: 0x773000, // green + blue\r\n            shininess: 10\r\n        }));\r\n    }\r\n\r\n    private initiateGeometies() {\r\n        // geometry\r\n        // main big torus\r\n        var geometry = new THREE.TorusGeometry(\r\n            200, // radius\r\n            30, // tube\r\n            16, // radial segments\r\n            100 // tubular segments\r\n        );\r\n\r\n        // Torus\r\n        this.torus = new THREE.Mesh(geometry, this.getMeshPhongMaterialFromTexture(Texture.GAS_BRIGHT, true));\r\n        this.torus.userData = { texture: Texture.GAS_BRIGHT };       // velocity of pivot's update\r\n        this.torus.rotateX(THREE.Math.degToRad(90)); // 90 degree\r\n        this.torus.receiveShadow = true;\r\n        this.torus.castShadow = true;\r\n\r\n\r\n        // add a pivot point\r\n        this.pivotPoint = new THREE.Object3D();\r\n\r\n        //// rotation satellite top of torus\r\n        var sphereGeom = new THREE.SphereGeometry(30, 32, 32);\r\n\r\n        this.sphereSatRotational = new THREE.Mesh(sphereGeom, this.getMeshPhongMaterialFromTexture(Texture.MOON_BW));\r\n        // 200 = R of torus, 15 = half tube torus, 10 = half diameter sphere \r\n        this.sphereSatRotational.position.set(200, 15 + 45, 0);\r\n\r\n        this.sphereSatRotational.castShadow = true;\r\n        this.sphereSatRotational.receiveShadow = true;\r\n\r\n        // make the pivot points the sphere's parent\r\n        this.pivotPoint.add(this.sphereSatRotational);\r\n\r\n        // add to scene\r\n        this.scene.add(this.torus);\r\n        this.scene.add(this.pivotPoint);\r\n\r\n        // Add different spheres with cannon shapes / bodies\r\n        for (var i = 1; i < 8; i++) {\r\n            for (var j = 1; j < 3; j++) {\r\n                let factor = Math.random() * 30 + 5;\r\n                console.log(\"factor: \" + factor);\r\n\r\n                let sign: number = (factor > 20) ? +1 : -1; // positive or negative\r\n                var sphereShape = new Cannon.Sphere(factor);\r\n                var sphereBody = new Cannon.Body({ mass: factor });\r\n                sphereBody.addShape(sphereShape);\r\n                sphereBody.position.set(j*50, 100 * i, 20 * i * j - 150);\r\n                sphereBody.angularVelocity.set(0, factor / 100 * sign,0 );\r\n                sphereBody.quaternion.set(0.2, 0.5, 0, 1);\r\n                this.cannonBalls.push(sphereBody);\r\n                this.cannonWorld.addBody(sphereBody);\r\n\r\n                // visual\r\n                var geom = new THREE.SphereGeometry(factor, 32, 32);\r\n                var mesh = new THREE.Mesh(geom, this.getMeshPhongMaterialFromTexture(Texture.GAS_GREEN));\r\n                mesh.position.set(j*50 , 100 * i, 20 * i * j - 150);\r\n                mesh.castShadow = true;\r\n                mesh.receiveShadow = true;\r\n                this.sceneBalls.push(mesh);\r\n                this.scene.add(mesh);\r\n\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n    private addHelpers() {\r\n        //axes\r\n        var axes = new THREE.AxesHelper(100);\r\n        this.scene.add(axes);\r\n\r\n        // 90° grid\r\n        var size = 100;\r\n        var divisions = 10;\r\n        var gridHelperX = new THREE.GridHelper(size, divisions);\r\n        gridHelperX.rotateX(THREE.Math.degToRad(90));\r\n        this.scene.add(gridHelperX);\r\n\r\n        var gridHelperY = new THREE.GridHelper(size, divisions);\r\n        gridHelperY.rotateX(THREE.Math.degToRad(180));\r\n        this.scene.add(gridHelperY);\r\n    }\r\n\r\n    private initTrackballControls() {\r\n        // track control\r\n        this.controls = new TrackballControls(this.camera, this.rendererCSS.domElement);\r\n        this.controls.rotateSpeed = 2;\r\n        this.controls.minDistance = 5;\r\n        this.controls.maxDistance = 2000;\r\n    }\r\n\r\n    private initTween() {\r\n\r\n        // tween up particle system at init\r\n        let component: MainCSS3d = this;\r\n        this.tweenPivotPartSysRotY = new TWEEN.Tween({ yVel: 0.0 })\r\n            .to({ yVel: 0.005 }, 3000)\r\n            .onUpdate(function () {\r\n                component.pivotPointPmSystem.userData.rotation_yVel = this.yVel;\r\n            })\r\n            .start();\r\n    }\r\n\r\n    private animate() {\r\n\r\n        let component: MainCSS3d = this;\r\n        let setImpls = false;\r\n\r\n        (function render(time) {\r\n\r\n            requestAnimationFrame(render);\r\n\r\n            // objects\r\n            component.pivotPointPmSystem.rotation.y -= component.pivotPointPmSystem.userData.rotation_yVel;\r\n\r\n            // renderer\r\n            component.rendererCSS.render(component.sceneCSS, component.camera);\r\n            component.renderer.render(component.scene, component.camera);\r\n\r\n            // trackball controls\r\n            component.controls.update();\r\n\r\n            /// tween\r\n            TWEEN.update(time);\r\n            component.pivotPoint.rotation.y += 0.01;\r\n            component.sphereSatRotational.rotation.y += 0.01;\r\n\r\n            // cannon physics                   \r\n            component.cannonWorld.step(1 / 6);\r\n\r\n            // physic the spheres\r\n            for (let i = 0; i < component.cannonBalls.length; i++) {\r\n                component.sceneBalls[i].position.set(\r\n                    component.cannonBalls[i].position.x,\r\n                    component.cannonBalls[i].position.y,\r\n                    component.cannonBalls[i].position.z\r\n                );\r\n\r\n                component.sceneBalls[i].quaternion.set(\r\n                    component.cannonBalls[i].quaternion.x,\r\n                    component.cannonBalls[i].quaternion.y,\r\n                    component.cannonBalls[i].quaternion.z,\r\n                    component.cannonBalls[i].quaternion.w\r\n                );\r\n            }\r\n\r\n        }());\r\n    }\r\n\r\n\r\n    //////////////////////// CSS\r\n    private initiateCSSObjects() {\r\n\r\n        let component: MainCSS3d = this;\r\n        let menuPosX = -250;\r\n        let liEmoj: string[] = [\"🙏\", \"👽\", \"😈\", \"👻\", \"😮\"];\r\n        let liTxt: string[] = [\"Physics!\", \"Torus Material\", \"Light\", \"Satelite Scale X (tween)\", \"Reset Objects and Move this CSS Element\"];\r\n\r\n        for (let i = 1; i <= 5; i++) {\r\n            var element = document.createElement('div');\r\n            element.className = 'element';\r\n            element.id = 'elem_' + i;\r\n            element.addEventListener('click', function (event) {\r\n\r\n                //console.log(\"clicked element\" + JSON.stringify(this.id));\r\n                switch (this.id) {\r\n                    case \"elem_1\":  //Physics\r\n                        console.log(\"ok\");\r\n                        if (component.bPhysicsOn === false) {\r\n                            document.getElementById(this.id).className = \"elementClick\";\r\n\r\n                            // Add an impulse to the center\r\n                            console.log(\"x: \" + component.sphereSatRotational.position.x + \", z:\" + component.sphereSatRotational.position.z);\r\n\r\n                            // var currentPoint = new Cannon.Vec3(\r\n                            //     component.sphereSatRotational.position.x+1,\r\n                            //     component.sphereSatRotational.position.y,\r\n                            //     component.sphereSatRotational.position.z);\r\n\r\n                            // var impulse = new Cannon.Vec3(0,0,-1000);\r\n                            // component.shapeBody.applyImpulse(impulse,currentPoint);\r\n                            component.bPhysicsOn = true;\r\n                            component.cannonWorld.gravity.set(0, -9.81, 0);\r\n                        } else {\r\n                            document.getElementById(this.id).className = \"element\";\r\n                            component.cannonWorld.gravity.set(0, 0, 0);\r\n                            component.bPhysicsOn = false;\r\n                        }\r\n\r\n                        break;\r\n                    case \"elem_2\":  //Material\r\n                        // toggle the torus material, with help of setting user data\r\n                        console.log(\"component.torus.userData.texture: \" + component.torus.userData.texture);\r\n\r\n                        if (component.torus.userData.texture === Texture.GAS_BRIGHT) {\r\n                            component.torus.material = component.getMeshPhongMaterialFromTexture(Texture.GAS_DARK, true);\r\n                            component.torus.userData.texture = Texture.GAS_DARK;\r\n                            document.getElementById(this.id).className = \"elementClick\";\r\n                        } else {\r\n                            component.torus.material = component.getMeshPhongMaterialFromTexture(Texture.GAS_BRIGHT, true);\r\n                            component.torus.userData.texture = Texture.GAS_BRIGHT;\r\n                            document.getElementById(this.id).className = \"element\";\r\n                        }\r\n                        break;\r\n                    case \"elem_3\":  //light\r\n                        if (component.directionalLight.intensity === 0.4) {\r\n                            document.getElementById(this.id).className = \"elementClick\";\r\n                            component.directionalLight.intensity = 0.0;\r\n                        } else {\r\n                            component.directionalLight.intensity = 0.4;\r\n                            document.getElementById(this.id).className = \"element\";\r\n                        }\r\n                        break;\r\n                    case \"elem_4\":  //trabant scale\r\n                        document.getElementById(this.id).className = (component.sphereSatRotational.scale.z === 1.0 ? \"elementClick\" : \"element\");\r\n                        console.log(component.sphereSatRotational.scale.z);\r\n\r\n                        if (component.sphereSatRotational.scale.z === 1.0) {\r\n                            component.tweenSphereScaleZ = new TWEEN.Tween({ z: 1.0 })\r\n                                .to({ z: 3.0 }, 1000);\r\n                        } else {\r\n                            component.tweenSphereScaleZ = new TWEEN.Tween({ z: 3.0 })\r\n                                .to({ z: 1.0 }, 1000);\r\n                        }\r\n\r\n                        component.tweenSphereScaleZ.onUpdate(function () {\r\n                            component.sphereSatRotational.scale.z = this.z;\r\n                        })\r\n                            .start();\r\n                        break;\r\n                    case \"elem_5\":  //reset physic objects\r\n                        // everytime do the same sequential steps\r\n                        document.getElementById(this.id).className = \"elementClick\";\r\n                        \r\n                        component.cannonWorld.gravity.set(0, 0, 0);  // gravity off\r\n\r\n                        document.getElementById(\"elem_1\").className = \"element\";\r\n                        component.bPhysicsOn = false;\r\n\r\n                        // tween objects upwards\r\n                        component.tweenPhysicObjects = new TWEEN.Tween({ yPos: 0 })\r\n                            .to({yPos: 250}, 2000)\r\n                            .onUpdate(function () {                            \r\n                                for (let i = 0; i < component.cannonBalls.length; i++) {\r\n                                    component.sceneBalls[i].position.y = component.cannonBalls[i].position.y = this.yPos;\r\n                                }\r\n                            })\r\n                            .onComplete(function(){\r\n                                document.getElementById(\"elem_5\").className = \"element\";\r\n                            })\r\n                            .start();\r\n\r\n                        // tween CSS 3d element\r\n                        let targetPosZ = (component.sceneCSS.getObjectByName(\"elem_5\").position.z === 0)? 150 : 0;\r\n                        component.tweenPhysicCSSElem = new TWEEN.Tween({ zPos: component.sceneCSS.getObjectByName(\"elem_5\").position.z })\r\n                        .to({zPos: targetPosZ}, 1000)\r\n                        .onUpdate(function () {                            \r\n                            component.sceneCSS.getObjectByName(\"elem_5\").position.z = this.zPos;\r\n                        })\r\n                        .start();\r\n\r\n                        break;\r\n                    default:\r\n                        console.log(this.id + \" not configured\");\r\n                        break;\r\n                }\r\n\r\n            }, false);\r\n            //element.style.backgroundColor = 'rgba(0,127,127,' + (Math.random() * 0.5 + 0.25) + ')';\r\n\r\n            // var number = document.createElement('div');\r\n            // number.className = 'number';\r\n            // number.textContent = i.toString(10);\r\n            // element.appendChild(number);\r\n\r\n            var symbol = document.createElement('div');\r\n            symbol.className = 'symbol';\r\n            symbol.textContent = liEmoj[i - 1];\r\n            element.appendChild(symbol);\r\n\r\n            var details = document.createElement('div');\r\n            details.className = 'details';\r\n            details.innerHTML = (i==5)? liTxt[i - 1] : \"Toggle<br>\" + liTxt[i - 1];\r\n            element.appendChild(details);\r\n\r\n            let object:CSS3DRenderer.CSS3DObject = new CSS3DRenderer.CSS3DObject(element);\r\n            object.position.x = menuPosX + (-100 * i);\r\n            object.position.y = 200;\r\n            object.name = \"elem_\"+i;\r\n           // object.userData = {id: \"elem_\"+i};\r\n            this.sceneCSS.add(object);\r\n        }\r\n\r\n        ///////////////// examples of ui elements\r\n        //  label wrap around checkbox\r\n        // var eInp = document.createElement('input');\r\n        // eInp.className = 'w3-check';\r\n        // eInp.type = \"checkbox\";\r\n        // eInp.addEventListener( 'change', function ( event ) {\r\n        //     if(this.checked) {\r\n        //         console.log(\"checked\");\r\n        //         component.torus.scale.set(2,2,2); \r\n        //     } else {\r\n        //         console.log(\"unchecked\");\r\n        //         component.torus.scale.set(0.5,0.5,0.5);\r\n        //     }     \r\n        // }, false );\r\n        // var eLblChkbx = document.createElement('label');\r\n        // eLblChkbx.textContent = \"flatten torus\";\r\n        // //eLblChkbx.style.backgroundColor = 'rgba(127,127,127,222)';\r\n        // eLblChkbx.className = 'elementChk';\r\n        // eLblChkbx.appendChild(eInp);\r\n        // var objectChk = new CSS3DRenderer.CSS3DObject(eLblChkbx);\r\n        // objectChk.position.x = menuPosX -4*100;\r\n        // objectChk.position.y = 0;\r\n        // this.sceneCSS.add(objectChk);\r\n\r\n        // slider --> it's static, not working\r\n        // var eSlider = document.createElement('input');\r\n        // eSlider.type = \"range\";\r\n        // eSlider.min = '1';        \r\n        // eSlider.max = '100';\r\n        // eSlider.value = '1';\r\n        // eSlider.style.backgroundColor = 'rgba(127,127,127,222)';\r\n        // eSlider.addEventListener('change', function (event) {\r\n        //     debugger;\r\n        //     component.torus.scale.set(0.5,0.5,0.5);\r\n        // }, false);\r\n        // var objectSlid = new CSS3DRenderer.CSS3DObject(eSlider);\r\n        // objectSlid.position.x = -100;\r\n        // objectSlid.position.y = 100;\r\n        // this.sceneCSS.add(objectSlid);\r\n\r\n        // dropdown menu\r\n        var dd = document.createElement('div');\r\n        dd.className = 'dropdown';\r\n        dd.textContent = 'Dropdown Menu';\r\n\r\n        // entry 1\r\n        var dd_content = document.createElement('div');\r\n        dd_content.className = 'dropdown-content';\r\n        dd_content.textContent = 'Toggle Particle System Rotation Velocity (Tween)';\r\n        dd_content.id = 'idPSystemRotY';\r\n        dd.appendChild(dd_content);\r\n        dd_content.addEventListener('click', function (event) {\r\n\r\n            if (component.pivotPointPmSystem.userData.rotation_yVel === 0.0) {\r\n                component.tweenPivotPartSysRotY = new TWEEN.Tween({ yVel: 0.0 })\r\n                    .to({ yVel: 0.005 }, 3000);\r\n                //document.getElementById('idPSystemRotY').textContent = 'Stop Particle System Rotation Velocity (Tween)';\r\n            } else {\r\n                component.tweenPivotPartSysRotY = new TWEEN.Tween({ yVel: 0.005 })\r\n                    .to({ yVel: 0.0 }, 3000);\r\n                //document.getElementById('idPSystemRotY').textContent = 'Start Particle System Rotation Velocity (Tween)';\r\n            }\r\n\r\n            component.tweenPivotPartSysRotY.onUpdate(function () {\r\n                component.pivotPointPmSystem.userData.rotation_yVel = this.yVel;\r\n            }).start();\r\n\r\n            console.log(component.pivotPointPmSystem.userData.rotation_yVel);\r\n        }, false);\r\n\r\n\r\n        // Entry 2\r\n        var dd_content2 = document.createElement('div');\r\n        dd_content2.className = 'dropdown-content';\r\n        dd_content2.textContent = 'New Terrain';\r\n        dd_content2.style.fontWeight = \"bold\";\r\n        dd_content.appendChild(dd_content2);\r\n        dd_content2.addEventListener('click', function (event) {\r\n            component.scene.remove(component.terrain);\r\n            component.initiateTerrain();\r\n\r\n        }, false);\r\n\r\n        var object = new CSS3DRenderer.CSS3DObject(dd);\r\n        object.position.set(menuPosX + 100, 240, 0);\r\n        this.sceneCSS.add(object);\r\n    }\r\n\r\n\r\n    private initiateParticles() {\r\n        let geom = new THREE.Geometry();\r\n        let material = new THREE.PointsMaterial({\r\n            size: 1,    // pixel default = 1\r\n            //     transparent: true,\r\n            //     opacity: 0.50,\r\n            //     //vertexColors: true, // default = false\r\n            sizeAttenuation: true, // default = false // same size, regardless of how far from the camera\r\n            color: 0xf9ea63\r\n        });\r\n\r\n        let range = 290;\r\n        for (let i = 0; i < 15000; i++) {\r\n            var alpha = Math.random() * 360;\r\n            var particle = new THREE.Vector3(\r\n                range * Math.cos(alpha) - 30 + Math.random() * 60,//* Math.random(), //- range / 2,\r\n                Math.random() - 5 + Math.random() * 15,\r\n                range * Math.sin(alpha) - 30 + Math.random() * 60//* Math.random() //- range / 2\r\n            );\r\n            geom.vertices.push(particle);\r\n            // var color = new THREE.Color(0x00ff00);\r\n            //     color.setHSL(color.getHSL().h,\r\n            //     color.getHSL().s,\r\n            //     Math.random() * color.getHSL().l);\r\n            // geom.colors.push(color);\r\n        }\r\n\r\n        this.pmSystem = new THREE.Points(geom, material);\r\n        this.scene.add(this.pmSystem);\r\n\r\n        // make the pivot points the particle system's parent\r\n        this.pivotPointPmSystem = new THREE.Object3D();\r\n        this.pivotPointPmSystem.userData = { rotation_yVel: 0.001 };       // velocity of pivot's update\r\n        this.pivotPointPmSystem.add(this.pmSystem);\r\n        this.scene.add(this.pivotPointPmSystem);\r\n\r\n    }\r\n\r\n    private initiateTerrain() {\r\n\r\n        // create vertices\r\n        var depth = 300;\r\n        var width = 300;\r\n        var spacingX = Math.random() * 10 + 10;\r\n        var spacingZ = spacingX;\r\n        var height = 120;\r\n        let offsetX: number = -width * spacingX / 2;\r\n        let offsetZ: number = depth * spacingZ / 2;\r\n        let offsetY: number = -250;\r\n\r\n        //var scale = Chroma.scale(['blue','green','gray']).domain([0,height]);\r\n        //var scale = Chroma.scale([0x00FFFF,0xFF00FF,0x00FF00]).domain([0,height]);\r\n        var scale = Chroma.scale([[Math.random() * 255, 128, 128], [0, Math.random() * 255, Math.random() * 255], [200, 200, 200]]).domain([1, height]);\r\n\r\n        var geometry = new THREE.Geometry();\r\n\r\n\r\n        //With Perlin\r\n        let noise = Perlin.generatePerlinNoise(300, 300);\r\n        for (var z = 0; z < depth; z++) {\r\n            for (var x = 0; x < width; x++) {\r\n\r\n                //var yValue = Math.abs(noise.perlin2(x / 10, z / 10) * height * 2);\r\n                //let yValue = Math.abs(Perlin.generateWhiteNoise(2, 3) * height * 2);\r\n                //z===0 ? (console.log(\"x: \" + x + \", noise[x]: \" + noise[x])) : 0;\r\n\r\n                var vertex = new THREE.Vector3(\r\n                    x * spacingX,\r\n                    Math.abs(noise[(z * depth) + x]) * height,\r\n                    //Math.random()*(height+x+x+z),\r\n                    z * spacingZ\r\n                );\r\n                geometry.vertices.push(vertex);\r\n            }\r\n        }\r\n        console.log(\"geometry.vertices[0]: \" + JSON.stringify(geometry.vertices[0]));\r\n        console.log(\"geometry.vertices[1]: \" + JSON.stringify(geometry.vertices[1]));\r\n\r\n\r\n        //define faces\r\n        for (var z = 0; z < depth - 1; z++) {\r\n            for (var x = 0; x < width - 1; x++) {\r\n                // we need to point to the position in the array\r\n                // a - - b\r\n                // |  x  |\r\n                // c - - d\r\n                var a = x + z * width;\r\n                var b = (x + 1) + (z * width);\r\n                var c = x + ((z + 1) * width);\r\n                var d = (x + 1) + ((z + 1) * width);\r\n\r\n                var face1 = new THREE.Face3(b, a, c);\r\n                var face2 = new THREE.Face3(c, d, b);\r\n\r\n                // console.log(\"High1: \" + this.getHighPoint(geometry, face1));\r\n                //console.log(\"High2: \" + this.getHighPoint(geometry, face2));\r\n\r\n                face1.color = new THREE.Color(scale(this.getHighPoint(geometry, face1)).hex());\r\n                face2.color = new THREE.Color(\r\n                    //this.getHighPoint(geometry, face1)/(100*3),\r\n                    //0.5,\r\n                    //0.5\r\n                    scale(this.getHighPoint(geometry, face2)).hex());\r\n                geometry.faces.push(face1);\r\n                geometry.faces.push(face2);\r\n            }\r\n        }\r\n\r\n        geometry.computeVertexNormals(true); // smoother\r\n        geometry.computeFaceNormals(); // light\r\n\r\n        // setup the material\r\n        this.terrainMat = new THREE.MeshPhongMaterial();\r\n        this.terrainMat.vertexColors = THREE.FaceColors;\r\n\r\n        // create the mesh\r\n        this.terrain = new THREE.Mesh(geometry, this.terrainMat);\r\n\r\n        this.terrain.position.set(offsetX, offsetY, offsetZ);\r\n        this.terrain.quaternion.setFromAxisAngle(new THREE.Vector3(0, -1, 0), -Math.PI / 2);\r\n\r\n        this.terrain.receiveShadow = true;\r\n\r\n        this.scene.add(this.terrain);\r\n\r\n\r\n        /////////////////////// Create the cannonjs body and shape for terrain\r\n        // Create a matrix of height values\r\n        var matrix = [];\r\n        for (var i = 0; i < depth; i++) {\r\n            matrix.push([]);\r\n            for (var j = 0; j < width; j++) {\r\n                var h = Math.abs(noise[(i * depth) + j]) * 100;\r\n                matrix[i].push(h);\r\n                //console.log(h);\r\n\r\n            }\r\n        }\r\n        //console.log(\"matrix0: \" + matrix[0][0]);\r\n        //console.log(\"matrix1: \" + matrix[0][1]);\r\n\r\n        // Create the heightfield\r\n        var groundShape = new Cannon.Heightfield(matrix, {\r\n            elementSize: spacingX\r\n        });\r\n\r\n        //var groundShape = new Cannon.Plane();\r\n        var groundBody = new Cannon.Body({ mass: 0 });\r\n        groundBody.addShape(groundShape);\r\n        groundBody.quaternion.setFromAxisAngle(new Cannon.Vec3(1, 0, 0), -Math.PI / 2);\r\n        console.log(\"groundBody.quaternion: \" + groundBody.quaternion);\r\n\r\n        //groundBody.quaternion.z = THREE.Math.degToRad(45);\r\n        //groundBody.position.set(-width*(spacingX/2), -520, depth*(spacingZ/2));\r\n        groundBody.position.set(offsetX, offsetY, offsetZ);\r\n        this.cannonWorld.addBody(groundBody);\r\n\r\n\r\n    }\r\n\r\n    private getHighPoint(geometry, face): number {\r\n\r\n        var v1 = geometry.vertices[face.a].y;\r\n        var v2 = geometry.vertices[face.b].y;\r\n        var v3 = geometry.vertices[face.c].y;\r\n\r\n        return Math.max(v1, v2, v3);\r\n    }\r\n\r\n    private createCSSRenderer() {\r\n        this.sceneCSS = new THREE.Scene();\r\n\r\n        this.rendererCSS = new CSS3DRenderer.CSS3DRenderer();\r\n        this.rendererCSS.setSize(window.innerWidth * this.scrSize, window.innerHeight * this.scrSize);\r\n        this.rendererCSS.domElement.style.position = 'absolute';\r\n        //this.rendererCSS.domElement.style.top = \"40px\";\r\n        this.rendererCSS.domElement.style.zIndex = \"2\"; // required\r\n\r\n        this.htmlDivCanvas.appendChild(this.rendererCSS.domElement);\r\n    }\r\n\r\n    private initPhysicWorld() {\r\n        this.cannonWorld = new Cannon.World();\r\n        this.cannonWorld.quatNormalizeSkip = 2;\r\n        this.cannonWorld.quatNormalizeFast = true;\r\n        this.cannonWorld.gravity.set(0, 0, 0);    // X, Y, Z direction // deal with timestep in render func\r\n        this.cannonWorld.broadphase = new Cannon.NaiveBroadphase(); // activate colliding bodies\r\n        this.cannonWorld.solver.iterations = 10;\r\n        this.cannonWorld.defaultContactMaterial.contactEquationRelaxation = 0.8;\r\n    }\r\n\r\n\r\n    public onResize() {\r\n        this.camera.aspect = this.aspRatio;\r\n        this.camera.updateProjectionMatrix();\r\n        console.log(`onResize: Witdh: ${window.innerWidth * this.scrSize}, Height: ${window.innerHeight * this.scrSize}`);\r\n        this.renderer.setSize(window.innerWidth * this.scrSize, window.innerHeight * this.scrSize);\r\n        this.rendererCSS.setSize(window.innerWidth * this.scrSize, window.innerHeight * this.scrSize);\r\n    }\r\n}\r\n\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Private/programming/Angular/prj/Test3D/src/app/css3d-threejs/src/main.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Private/programming/Angular/prj/Test3D/src/app/cube-threejs/cube-threejs.component.css\n// module id = ../../../../../src/app/cube-threejs/cube-threejs.component.css\n// module chunks = main","module.exports = \"<!-- \\nHelp:\\n    Desc: Template reference variables ( #var )\\n        Link: https://angular.io/guide/template-syntax#ref-vars\\n    Desc: HTML DOM Events (function)\\n        Link: https://www.w3schools.com/jsref/dom_obj_event.asp \\n-->\\n\\n<!-- wrap w3 -->\\n<div class=\\\"w3-container\\\">\\n    <header>\\n            <div class=\\\"w3-container \\\">\\n                <h1><b>A Three.js cube showcase...</b></h1>\\n                In the canvas below you can play with at least one spinning cube. It's size is set to 1.0 \\\"unitless\\\" length of each edge.<br>\\n                The scene contains a plane below the cubes and a spotlight over it.<br>\\n                In this example the user cannot interact directly with the canvas via keybord or mouse movement.<br>\\n                Play around with the settings you can change.\\n            </div>\\n            <div class=\\\"w3-container \\\">\\n                <b>Note:</b>\\n                <ul>\\n                    <li>The 3D scene is set up on a HTML canvas element.</li>\\n                    <li>Only the <em>Threejs</em> library is used here.</li>\\n                </ul>\\n            </div>\\n    </header>\\n\\n    <div class=\\\"w3-container\\\">\\n        <!-- Angular Template reference variable '#': Use the hash symbol (#) to declare a reference variable.  -->\\n        \\n        <!-- canvas here -->\\n        <canvas #canvas (window:resize)=\\\"onResize()\\\"></canvas>\\n               \\n        <!-- Setting UI -->\\n        <div class=\\\"w3-row\\\">\\n            <!-- with two way binding with ngModule, we need here to import the FormsModule-->\\n            \\n            <!-- Cube Rotation Speed X, Y, Z-->\\n            <div class=\\\"w3-col s4 w3-left\\\">Cube Rotation Speed X: {{rotationSpeedX/1000}}</div>\\n            <div class=\\\"w3-col s8 w3-left\\\">\\n                <input [(ngModel)]=\\\"rotationSpeedX\\\" type=\\\"range\\\" min=\\\"1\\\" max=\\\"100\\\" class=\\\"slider\\\">\\n            </div>\\n            <div class=\\\"w3-col s4 w3-left\\\">Cube Rotation Speed Y: {{rotationSpeedY/1000}}</div>\\n            <div class=\\\"w3-col s8 w3-left\\\">\\n                <input [(ngModel)]=\\\"rotationSpeedY\\\" type=\\\"range\\\" min=\\\"1\\\" max=\\\"100\\\" class=\\\"slider\\\">\\n            </div>\\n            <div class=\\\"w3-col s4 w3-left\\\">Cube Rotation Speed Z: {{rotationSpeedZ/1000}}</div>\\n            <div class=\\\"w3-col s8 w3-left\\\">\\n                <input [(ngModel)]=\\\"rotationSpeedZ\\\" type=\\\"range\\\" min=\\\"1\\\" max=\\\"100\\\" class=\\\"slider\\\">\\n            </div>\\n\\n            <!-- Camera Position Z -->\\n            <div class=\\\"w3-col s4 w3-left\\\">Camera Position Z: {{camPosZ}}</div>\\n            <div class=\\\"w3-col s8 w3-left\\\">\\n                <input [(ngModel)]=\\\"camPosZ\\\" type=\\\"range\\\" min=\\\"2\\\" max=\\\"30\\\" class=\\\"slider\\\">\\n            </div>\\n\\n            <!-- Number Of Cubes -->\\n            <div class=\\\"w3-col s4 w3-left\\\">Number Of Cubes: {{numOfCubes}}</div>\\n            <div class=\\\"w3-col s8 w3-left\\\">\\n                <input type=\\\"range\\\" #id_In_NumOfCubes (input)=\\\"changeNumOfCubes(id_In_NumOfCubes.value)\\\" min=\\\"1\\\" max=\\\"100\\\" [value]=\\\"numOfCubes\\\" class=\\\"slider\\\">\\n            </div>\\n\\n            <!-- Color or texture -->\\n            <div class=\\\"w3-col s4 w3-left\\\">Use Texture Or Colors:</div>\\n            <div class=\\\"w3-col s8 w3-left\\\">\\n                <input #id_In_ChangeMaterial (change)=\\\"changeMaterial(id_In_ChangeMaterial.checked)\\\" type=\\\"checkbox\\\">\\n            </div>\\n        </div> \\n\\n        <!-- with property binding... a clear solution\\n        <input type=\\\"range\\\" #refInRotSpeedX (change)=\\\"changeRotSpeedX(refInRotSpeedX.value)\\\" min=\\\"1\\\" max=\\\"100\\\" [value]=\\\"rotationSpeedX\\\" class=\\\"slider\\\">\\n        X {{rotationSpeedX}}\\n        -->\\n\\n        <!-- with event binding... no godd solution-->\\n        <!-- <input type=\\\"range\\\" (change)=\\\"changeNumOfCubes($event)\\\" min=\\\"1\\\" max=\\\"100\\\" [value]=\\\"numOfCubes\\\" class=\\\"slider\\\">\\n        Cubes {{numOfCubes}} -->\\n    </div>\\n\\n    <!-- textual info state-->\\n    <br>\\n    <div class=\\\"w3-container \\\">\\n    You currently have {{numOfCubes}} cube(s) on the canvas. The rotational speed\\n    is set to X={{rotationSpeedX/1000}}, Y={{rotationSpeedY/1000}}, Z={{rotationSpeedZ/1000}} for each cube.<br>\\n    The camera is {{camPosZ}} units away from the zero point Z. The cubes have now a material with {{(id_In_ChangeMaterial.checked)? 'brick texture':'colors'}}.\\n    </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Private/programming/Angular/prj/Test3D/src/app/cube-threejs/cube-threejs.component.html\n// module id = ../../../../../src/app/cube-threejs/cube-threejs.component.html\n// module chunks = main","import { AfterViewInit, Component, ElementRef, Input, OnInit, ViewChild } from '@angular/core';\nimport * as THREE from 'three';\n\n// import loacl ts files: https://www.typescriptlang.org/docs/handbook/namespaces-and-modules.html\n//import * as Triangleee from \"./src/cube\";\n\n//import * as Stats from './../../external-lib/stats-js/src/Stats';\n\n@Component({\n  selector: 'app-cube-threejs',\n  templateUrl: './cube-threejs.component.html',\n  styleUrls: ['./cube-threejs.component.css']\n})\nexport class CubeThreejsComponent implements OnInit{\n\n    /**\n     * example from: https://github.com/LayZeeDK/ng-three-examples/blob/master/src/app/cube/cube.component.ts\n     */\n\n    /* HELPER PROPERTIES (PRIVATE PROPERTIES) */\n    public camera: THREE.PerspectiveCamera;\n    //public tr = new Triangleee.Triangleee();\n\n\n    // get the first element or the directive matching the selector from the view DOM\n    @ViewChild('canvas')\n    private canvasRef: ElementRef;\n    private cubes: Array<THREE.Mesh> = [];\n    private renderer: THREE.WebGLRenderer;\n    private scene: THREE.Scene;\n    private _texture_brick: THREE.Texture;\n\n    private get canvas() : HTMLCanvasElement {\n        return this.canvasRef.nativeElement;\n    }\n\n\n    /* CUBE PROPERTIES */\n    // @Input()\n    public rotationSpeedX: number = 10;\n    // changeRotSpeedX(v: number) {\n    //     this.rotationSpeedX = v;\n    //     console.log('changeRotSpeedX: ' + v);\n    // }\n\n    // @Input()\n    public rotationSpeedY: number = 10;\n    // changeRotSpeedY(e) {\n    //     this.rotationSpeedY = e.target.value;\n    //     console.log('changeRotSpeedY: ' + e.target.value);\n    // }\n\n    public rotationSpeedZ: number = 10;\n\n    public camPosZ: number = 15;\n\n    public size: number = 1;\n\n    public isTextured: boolean = false; \n\n    private topLight: THREE.SpotLight;\n\n    public numOfCubes: number = 20;\n\n    /* DEPENDENCY INJECTION (CONSTRUCTOR) */\n    constructor() { }\n\n    //called after the constructor and called  after the first ngOnChanges() \n    ngOnInit() {\n    }\n\n    /* LIFECYCLE */\n    /**\n     * We need to wait until template is bound to DOM, as we need the view\n     * dimensions to create the scene. We could create the cube in a Init hook,\n     * but we would be unable to add it to the scene until now.\n     * https://angular.io/guide/lifecycle-hooks \n     */\n    public ngAfterViewInit() {\n        this.createScene();\n        this.changeNumOfCubes(this.numOfCubes.toString());\n\n        var planeGeometry = new THREE.PlaneGeometry(200, 200);\n        var planeMaterial = new THREE.MeshLambertMaterial();\n        var plane = new THREE.Mesh(planeGeometry, planeMaterial);\n        plane.receiveShadow = true;\n        plane.rotation.x = -0.5 * Math.PI;\n        plane.position.x = 100;\n        plane.position.z = 100;\n        this.scene.add(plane);\n\n        //axes\n        var axes = new THREE.AxesHelper(100);\n        this.scene.add(axes);\n\n        // light\n        var directionalLight = new THREE.DirectionalLight( 0xffffff, 1.0 );\n        directionalLight.castShadow = false;\n        this.scene.add( directionalLight );\n\n        var directionalLight = new THREE.DirectionalLight( 0xffffff, 0.5 );\n        directionalLight.position.set(10,10,50);\n        directionalLight.target.position.set(10,10,0);\n        this.scene.add( directionalLight );\n\n        this.topLight = new THREE.SpotLight(0x111111, 0.5);\n        this.topLight.position.set(0,15,0);\n        this.topLight.castShadow = true;\n        this.scene.add(this.topLight);\n\n        this.startRenderingLoop();\n        }\n\n    /* STAGING, ANIMATION, AND RENDERING */\n    /**\n     * Animate the cube\n     */\n    private animateCubes() {\n\n        // this.cubes[0].rotation.x += (this.rotationSpeedX/1000);\n        // this.cubes[0].rotation.y += (this.rotationSpeedY/1000);\n        // this.cubes[0].rotation.z += (this.rotationSpeedZ/1000);\n        let component: CubeThreejsComponent = this;\n\n        this.cubes.forEach(function (cube) {\n            cube.rotation.x += (component.rotationSpeedX/1000);\n            cube.rotation.y += (component.rotationSpeedY/1000);\n            cube.rotation.z += (component.rotationSpeedZ/1000);\n          });\n\n    }\n\n    private updateCamera (){\n        this.camera.position.z = this.camPosZ;\n    }\n\n    public changeNumOfCubes(v: string){\n        console.log(\"input cubes: \" + v + \", scene cubes: \" +this.cubes.length);\n        \n        let targetVal: number = parseInt(v,10);\n\n        // add cubes to scene\n        while(targetVal > this.cubes.length){\n            this.addCube();\n        }\n\n        // remove cubes from scene\n        while(targetVal < this.cubes.length){\n            this.removeCube();\n        }\n\n        //\n        this.numOfCubes = this.cubes.length;\n    }\n\n    public changeMaterial(textured: boolean){\n        console.log(\"textured: \" + textured);\n        \n        this.isTextured = textured;\n\n        // check to set texture or pure color\n        var matProps:any = {};\n        if(textured){\n            matProps.map = this._texture_brick;\n        }else{\n            matProps.color = (new THREE.Color( Math.random(), Math.random(), Math.random()));\n        }\n\n\n        // re-materialize presented cubes\n        let component: CubeThreejsComponent = this;\n        let matCube = new THREE.MeshPhongMaterial(\n            matProps\n        )\n\n        this.cubes.forEach(function (cube) {\n            cube.material = matCube;\n        });\n    }\n    \n\n    /**\n     * Create the cube\n     */\n    private addCube() {\n    \n        let geometry = new THREE.BoxGeometry(this.size, this.size, this.size);\n        //let geometry = new THREE.IcosahedronGeometry(1, 1);\n    \n        this._texture_brick = new THREE.TextureLoader().load( \"assets/texture/Bricks.jpg\" );\n        this._texture_brick.minFilter = THREE.LinearFilter;\n        // check to set texture or pure color\n        var matProps:any = {};\n        if(this.isTextured){\n            matProps.map = this._texture_brick;\n        }else{\n            matProps.color = (new THREE.Color( Math.random(), Math.random(), Math.random()));\n        }\n\n        this.cubes.push(\n            new THREE.Mesh(\n                geometry,\n                new THREE.MeshPhongMaterial(\n                    //{color: (new THREE.Color( Math.random(), Math.random(), Math.random() ))}\n                    matProps\n                )\n            )\n        );\n        this.cubes[this.cubes.length-1].position.x = Math.ceil(Math.random() * 10);\n        this.cubes[this.cubes.length-1].position.y = Math.ceil(Math.random() * 10);\n        this.cubes[this.cubes.length-1].position.z = Math.ceil(Math.random() * 10);\n       \n        this.cubes[this.cubes.length-1].castShadow = true;\n        this.cubes[this.cubes.length-1].receiveShadow = true;\n\n        // Add cube to scene\n        this.scene.add(this.cubes[this.cubes.length-1]);\n    }\n\n    private removeCube() {\n        this.scene.remove(this.cubes[this.cubes.length-1]);\n        this.cubes.pop();\n    }\n\n    /**\n     * Create the scene\n     */\n    private createScene() {\n        /* Scene */\n        this.scene = new THREE.Scene();\n\n        /* Camera */\n        let aspectRatio = this.getAspectRatio();\n        this.camera = new THREE.PerspectiveCamera(\n            70,\n            aspectRatio,\n            1,\n            1000\n        );\n        this.camera.position.set(5,10,this.camPosZ);\n        this.camera.lookAt(new THREE.Vector3( 5, 0, 0 ));\n    }\n\n    /**\n     * Start the rendering loop\n     */\n    private startRenderingLoop() {\n        /* Renderer */\n        // Use canvas element in template\n        this.renderer = new THREE.WebGLRenderer({\n             canvas: this.canvas,\n             antialias: true,\n                alpha: true\n        });\n        this.renderer.setPixelRatio(devicePixelRatio);\n        this.renderer.setClearColor(0xffffff, 1);\n        this.renderer.setSize(window.innerWidth*0.66, window.innerHeight*0.66);\n \n        // shadow\n        this.renderer.shadowMap.enabled = true;\n        this.renderer.shadowMap.type = THREE.PCFSoftShadowMap;   // to antialias the shadow\n\n      this.renderer.render(this.scene, this.camera);\n\n        let component: CubeThreejsComponent = this;\n        \n        (function render() {\n            requestAnimationFrame(render);\n            component.animateCubes();\n            component.updateCamera();\n            component.renderer.render(component.scene, component.camera);\n        }());\n\n    }\n\n    /* EVENTS */\n    /**\n     * Update scene after resizing. \n     */\n    public onResize() {\n        this.camera.aspect = this.getAspectRatio();\n        this.camera.updateProjectionMatrix();\n        console.log(`onResize: Witdh: ${window.innerWidth*0.66}, Height: ${window.innerHeight*0.66}`);\n        this.renderer.setSize(window.innerWidth*0.66, window.innerHeight*0.66);\n    }\n\n     /**\n     * \n     * \n     * @private\n     * @returns \n     * @memberof CubeThreejsComponent\n     */\n    private getAspectRatio() {\n        return this.canvas.clientWidth / this.canvas.clientHeight;\n        //return window.innerWidth/4 / window.innerHeight/2;\n    }\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Private/programming/Angular/prj/Test3D/src/app/cube-threejs/cube-threejs.component.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Private/programming/Angular/prj/Test3D/src/app/home/home.component.css\n// module id = ../../../../../src/app/home/home.component.css\n// module chunks = main","module.exports = \"<!-- wrap w3 -->\\n<div class=\\\"w3-container\\\">\\n  <header>\\n    <div class=\\\"w3-container \\\">\\n      <h1>\\n        <b>3D showcase examples set up on Angular 5, Three.js</b>\\n      </h1>\\n      Currently there is an example with rotating cubes and an example with a terrain, CSS3D and pysics developed.\\n      <br> A small game included most features of the examples will be implemented...\\n      <br>\\n    </div>\\n\\n  </header>\\n  <div class=\\\"w3-container\\\">\\n    <p>\\n      <b>Note: This page is not responsive for mobile screens yet.</b>\\n    </p>\\n  </div>\\n\\n  <!-- thumb naming-->\\n  <div class=\\\"w3-row\\\">\\n    <div class=\\\"w3-col s3 w3-center\\\">\\n      <p>Cube - Three.js</p>\\n    </div>\\n    <div class=\\\"w3-col s3 w3-center\\\">\\n      <p>CSS3D - Three.js</p>\\n    </div>\\n    <div class=\\\"w3-col s6\\\"></div>\\n  </div>\\n\\n  <!--thumbs-->\\n  <div class=\\\"w3-row\\\">\\n    <div class=\\\"w3-col s3 w3-center\\\">\\n      <a routerLink=\\\"cube-threejs\\\">\\n        <img [src]=\\\"imgURL_cube_threejs\\\" alt=\\\"\\\" height=\\\"150\\\" width=\\\"150\\\">\\n      </a>\\n    </div>\\n    <div class=\\\"w3-col s3 w3-center\\\">\\n      <a routerLink=\\\"css3d-threejs\\\">\\n        <img [src]=\\\"imgURL_css3d_threejs\\\" alt=\\\"\\\" height=\\\"150\\\" width=\\\"150\\\">\\n      </a>\\n    </div>\\n    <div class=\\\"w3-col s6\\\"></div>\\n  </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Private/programming/Angular/prj/Test3D/src/app/home/home.component.html\n// module id = ../../../../../src/app/home/home.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  // thumbnails\n  public imgURL_cube_threejs = \"assets/screens/thumb_cube_threejs.jpg\";\n  public imgURL_css3d_threejs = \"assets/screens/thumb_css3d_threejs.jpg\";\n\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Private/programming/Angular/prj/Test3D/src/app/home/home.component.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// C:/Private/programming/Angular/prj/Test3D/src/environments/environment.ts","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n\n\n\n// WEBPACK FOOTER //\n// C:/Private/programming/Angular/prj/Test3D/src/main.ts"],"sourceRoot":"webpack:///"}