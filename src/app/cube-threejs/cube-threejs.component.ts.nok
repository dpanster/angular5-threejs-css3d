import { AfterViewInit, Component, ElementRef, OnInit, ViewChild } from '@angular/core';


// import loacl ts files: https://www.typescriptlang.org/docs/handbook/namespaces-and-modules.html
import * as CubeWorld from "./src/threejsCubeWorld";

//import * as Stats from './../../external-lib/stats-js/src/Stats';

@Component({
  selector: 'app-cube-threejs',
  templateUrl: './cube-threejs.component.html',
  styleUrls: ['./cube-threejs.component.css']
})
export class CubeThreejsComponent implements OnInit{

    public cubeWorld;

    // get the first element or the directive matching the selector from the view DOM
   @ViewChild('canvas')
   private canvasRef: ElementRef;

    /* DEPENDENCY INJECTION (CONSTRUCTOR) */
    constructor() { }

    //called after the constructor and called  after the first ngOnChanges() 
    ngOnInit() {
    }


    /**
     * We need to wait until template is bound to DOM, as we need the view
     * dimensions to create the scene. We could create the cube in a Init hook,
     * but we would be unable to add it to the scene until now.
     * https://angular.io/guide/lifecycle-hooks 
     */
    public ngAfterViewInit() {
        this.cubeWorld = new CubeWorld.World(this.canvasRef.nativeElement);
    }
}
